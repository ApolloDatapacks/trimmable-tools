plugins {
    id 'com.github.johnrengelman.shadow'
    id 'me.modmuss50.mod-publish-plugin' version '0.5.1'
}

loom {
    forge {
        mixinConfig "trimmable_tools.mixins.json"
    }
}

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common

    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.forge_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowBundle project(path: ":common", configuration: "transformProductionForge")

    implementation(annotationProcessor("io.github.llamalad7:mixinextras-common:${rootProject.mixin_extras_version}"))
    implementation(include("io.github.llamalad7:mixinextras-forge:${rootProject.mixin_extras_version}"))
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = "dev-shadow"
}

remapJar {
    inputFile.set shadowJar.archiveFile
}

publishMods {
    file = remapJar.archiveFile
    changelog = "${update_changelog}"
    type = STABLE
    modLoaders.add("forge")
    displayName = "v%s ~ Forge 1.20".formatted(project.version)

    dryRun = false

    modrinth {
        accessToken = providers.environmentVariable("TOKEN_MR")
        projectId = "MJu3fF3K"

        minecraftVersions.add("1.20.1")
    }

    curseforge {
        accessToken = providers.environmentVariable("TOKEN_CF")
        projectId = "834329"

        minecraftVersions.add("1.20.1")
    }
}